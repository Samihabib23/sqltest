-- number of students 

select count(*) from students 

  

--get students population in each year 

select student_population_year_ref, count(student_epita_email) from students s group by student_population_year_ref 

  

--get students population in each program  

select student_population_code_ref, count(student_epita_email) from students s group by student_population_code_ref 

  

--calculate age from DOB 

select contact_first_name, contact_last_name ,contact_birthdate, date_part('year', age(contact_birthdate)) from contacts c 

  

--add age column to contacts 

ALTER TABLE contacts 

add contact_age integer null 

  

--add age to age list from dob 

update contacts  

set contact_age = date_part('year', age(contact_birthdate)) 

--or  

update contacts as c1 set contact_age =  

(SELECT date_part('year',age(contact_birthdate)) as c_age  

FROM contacts as c2 where c1.contact_email=c2.contact_email); 

  

--avg students age 

select avg(contact_age) as avg_student_age 

from contacts c inner join students s 

on c.contact_email = s.student_contact_ref 

  

--avg session duration for a course 

select avg(EXTRACT(EPOCH FROM TO_TIMESTAMP(session_end_time, 'HH24:MI:SS')::TIME - TO_TIMESTAMP(session_start_time, 'HH24:MI:SS')::TIME)/3600) as duration  

from sessions as s left join courses as c 

on c.course_code=s.session_course_ref 

where c.course_code='SE_ADV_DB' 

  

--student with most absences 

select count(a.attendance_student_ref) as absences, 

c.contact_first_name, c.contact_last_name 

from contacts as c 

left join students as s on s.student_contact_ref=c.contact_email 

left join attendance as a on s.student_epita_email=a.attendance_student_ref 

where a.attendance_presence=0 

group by c.contact_first_name, c.contact_last_name 

order by absences desc  

limit 1 

  

--find course with most absences 

select c.course_name, count(a.attendance_presence)  

	from attendance a inner join courses c  

		on attendance_course_ref = c.course_code  

			where attendance_presence = 0 

				group by c.course_name 

					order by count desc  

						limit 1 

  

-- find students who are not graded 

select s.student_epita_email, g.grade_score  

from students s right join grades g 

on s.student_epita_email = g.grade_student_epita_email_ref 

where g.grade_score is null 

  

--teachers that are not present in any session  

select t.teacher_epita_email from teachers t  

left outer join sessions s  

on teacher_epita_email = s.session_prof_ref  

where s.session_prof_ref is null 

  

--list of teachers who attended the total sessions 

select con.contact_first_name, con.contact_last_name, tea.teacher_contact_ref, count(session_prof_ref) 

	from teachers tea 

	inner join contacts con 

	on con.contact_email = tea.teacher_contact_ref 

	inner join sessions sess 

	on tea.teacher_epita_email = sess.session_prof_ref 

group by con.contact_first_name, con.contact_last_name, tea.teacher_contact_ref 

order by count 

  

--find the DSA students details with grades 

select  c.contact_first_name , c.contact_last_name , s.student_population_code_ref , g.grade_course_code_ref as course_name, g.grade_score 

from students s inner join grades g 

on s.student_epita_email = g.grade_student_epita_email_ref 

inner join contacts c on s.student_contact_ref = c.contact_email  

where s.student_population_code_ref = 'DSA' 

  

--attendance percentage for a given student for all courses enrolled in 

select (sum_attendance/total_attendance::float)*100 as attendance_percentage, attendance_student_ref, attendance_course_ref from 

( 

	select count(*) as total_attendance, sum(attendance_presence) as sum_attendance, attendance_student_ref,attendance_course_ref from attendance 

	where attendance_student_ref ='jamal.vanausdal@epita.fr' 

	group by attendance_student_ref, attendance_course_ref 

) as res 

order by attendance_percentage 

  

--avg grade for DSA students 

select s.student_population_code_ref, avg(g.grade_score) as avg_grade from grades g 

left join students s on g.grade_student_epita_email_ref = s.student_epita_email 

where s.student_population_code_ref = 'DSA' 

group by s.student_population_code_ref 

  

--all students avg grade 

select c.contact_first_name, c.contact_last_name, s.student_epita_email , avg(grade_score)  

from grades g inner join students as s 

on g.grade_student_epita_email_ref = s.student_epita_email  

inner join contacts as c 

on s.student_contact_ref = c.contact_email 

group by c.contact_first_name,c.contact_last_name, s.student_epita_email 

order by avg desc 

  

--list courses taught by teachers 

select c.course_code, c2.contact_first_name, c2.contact_last_name  

from sessions s inner join courses c  

on s.session_course_ref = c.course_code  

inner join teachers t  

on s.session_prof_ref = t.teacher_epita_email  

inner join contacts c2 on t.teacher_contact_ref = c2.contact_email  

  

select distinct con.contact_first_name, con.contact_last_name, sess.session_course_ref 

	from teachers tea 

	inner join contacts con 

	on con.contact_email = tea.teacher_contact_ref 

	inner join sessions sess 

	on tea.teacher_epita_email = sess.session_prof_ref 

  

--teachers not giving any course 

select * from teachers t  

left join sessions s  

on s.session_prof_ref = t.teacher_epita_email  

left join courses c on s.session_course_ref = c.course_code  

where s.session_course_ref is null; 